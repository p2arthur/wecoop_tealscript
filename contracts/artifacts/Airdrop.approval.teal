#pragma version 9

// This TEAL was generated by TEALScript v0.63.0
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implmented in the contract, its repsective branch will be "NOT_IMPLMENTED" which just contains "err"
txn ApplicationID
int 0
>
int 6
*
txn OnCompletion
+
switch create_NoOp NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED call_NoOp

NOT_IMPLEMENTED:
	err

// createApplication(uint64)void
//
// // Define a airdrop value on creatin
abi_route_createApplication:
	// airdropValue: uint64
	txna ApplicationArgs 1
	btoi

	// execute createApplication(uint64)void
	callsub createApplication
	int 1
	return

createApplication:
	proto 1 0

	// contracts/airdrop.algo.ts:10
	// this.subscribersList.value = []
	byte 0x73756273637269626572734c697374 // "subscribersList"
	byte 0x0000
	app_global_put

	// contracts/airdrop.algo.ts:11
	// this.airdropValue.value = 1000
	byte 0x61697264726f7056616c7565 // "airdropValue"
	int 1000
	app_global_put
	retsub

// getAirdropValue()uint64
//
// //Get the airdrop value
abi_route_getAirdropValue:
	// execute getAirdropValue()uint64
	callsub getAirdropValue
	int 1
	return

getAirdropValue:
	proto 0 0

	// contracts/airdrop.algo.ts:16
	// return this.airdropValue.value;
	byte 0x61697264726f7056616c7565 // "airdropValue"
	app_global_get
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

// getAirdropSubscribers()account[]
//
// //Get airdropSubscribers
abi_route_getAirdropSubscribers:
	// execute getAirdropSubscribers()account[]
	callsub getAirdropSubscribers
	int 1
	return

getAirdropSubscribers:
	proto 0 0

	// contracts/airdrop.algo.ts:21
	// return this.subscribersList.value;
	byte 0x73756273637269626572734c697374 // "subscribersList"
	app_global_get
	extract 2 0
	dup
	len
	int 32
	/
	itob
	extract 6 2
	swap
	concat
	byte 0x151f7c75
	swap
	concat
	log
	retsub

// subscribeToList()account[]
abi_route_subscribeToList:
	// execute subscribeToList()account[]
	callsub subscribeToList
	int 1
	return

subscribeToList:
	proto 0 0

	// contracts/airdrop.algo.ts:25
	// this.subscribersList.value.push(this.app.address)
	byte 0x73756273637269626572734c697374 // "subscribersList"
	app_global_get
	extract 2 0
	global CurrentApplicationAddress
	concat
	byte 0x73756273637269626572734c697374 // "subscribersList"
	swap
	dup
	len
	int 32
	/
	itob
	extract 6 2
	swap
	concat
	app_global_put

	// contracts/airdrop.algo.ts:26
	// return this.subscribersList.value;
	byte 0x73756273637269626572734c697374 // "subscribersList"
	app_global_get
	extract 2 0
	dup
	len
	int 32
	/
	itob
	extract 6 2
	swap
	concat
	byte 0x151f7c75
	swap
	concat
	log
	retsub

create_NoOp:
	method "createApplication(uint64)void"
	txna ApplicationArgs 0
	match abi_route_createApplication
	err

call_NoOp:
	method "getAirdropValue()uint64"
	method "getAirdropSubscribers()address[]"
	method "subscribeToList()address[]"
	txna ApplicationArgs 0
	match abi_route_getAirdropValue abi_route_getAirdropSubscribers abi_route_subscribeToList
	err